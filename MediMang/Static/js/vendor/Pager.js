
//https://github.com/pontjho/ngpager

angular.module("ngPagerTemplates", []).run(["$templateCache", function (a) { a.put("ngpager.tpl.html", '\n<ul class="pagination" ng-class="{\'no-pages\': totalPages == 0, \'single-page\': totalPages == 1}">\n    <li ng-class="{disabled: !hasPreviousPage}"><a href="" ng-click="changed(selectedPage - 1)">&laquo;</a></li>\n    <li ng-show="displayFirstPage"><a href="" ng-click="changed(0)">1</a></li>\n    <li ng-show="hasPreBuffer" class="disabled"><a href="">...</a></li>\n    <li ng-class="{active: page.isCurrent}" ng-repeat="page in pages">\n        <a href="" ng-click="changed(page.pageNumber)">{{page.pageNumber+1}}</a>\n    </li>\n    <li ng-show="hasPostBuffer" class="disabled"><a href="">...</a></li>\n    <li ng-show="displayLastPage"><a href="" ng-click="changed(totalPages-1)">{{totalPages}}</a></li>\n    <li ng-class="{disabled: !hasNextPage}"><a href="" ng-click="changed(selectedPage + 1)">&raquo;</a></li>\n</ul>\n') }]), angular.module("PagerConfig", []).factory("PagerConfig", [function () { var a = 0, e = !1, t = 3, n = { setBase1: function () { a = -1 }, enableJumpControls: function () { e = !0 }, setDefaultMaxPages: function (a) { t = a } }; return Object.defineProperty(n, "offset", { get: function () { return a } }), Object.defineProperty(n, "areJumpControlsEnabled", { get: function () { return e } }), Object.defineProperty(n, "defaultMaxPages", { get: function () { return t } }), n }]), function () { "use strict"; angular.module("NgPager", ["ngPagerTemplates", "PagerConfig"]).directive("ngPager", ["PagerConfig", function (a) { var e = { restrict: "A", scope: { currentPage: "@", totalPages: "@", maxPagesToDisplay: "@", pageChanged: "&", enableJumpControls: "@" }, replace: !0, templateUrl: "ngpager.tpl.html", link: function (e) { function t(t) { g(e.currentPage, t, e.maxPagesToDisplay || a.defaultMaxPages) } function n(t) { g(t, e.totalPages, e.maxPagesToDisplay || a.defaultMaxPages) } function s(t) { g(e.currentPage, e.totalPages, t || a.defaultMaxPages) } function g(t, n, s) { var g = []; t = parseInt(t); var l = t + a.offset, i = -a.offset, o = n - a.offset; e.selectedPage = l; for (var u = l - Math.floor(s / 2), f = Math.max(u, i), c = l + Math.ceil(s / 2) + (f - u), P = Math.min(c, o), p = Math.max(i, f - (c - P)), h = p; P > h; h++) { var d = h + a.offset; g.push({ pageNumber: d, isCurrent: d == l }) } e.pages = g, r ? (e.displayFirstPage = p > i, e.hasPreBuffer = p > i + 1, e.hasPostBuffer = o - 1 > P, e.displayLastPage = o > P) : (e.displayFirstPage = !1, e.hasPreBuffer = p > i, e.hasPostBuffer = o > P, e.displayLastPage = !1), e.hasPreviousPage = l > 0, e.hasNextPage = n - 1 > l, e.totalPages = n } e.changed = function (t) { (t || 0 === t) && (0 > t || t >= e.totalPages || e.pageChanged({ pageNum: t - a.offset })) }; var r = e.enableJumpControls || a.areJumpControlsEnabled; e.$watch("currentPage", n), e.$watch("totalPages", t), e.$watch("maxPagesToDisplay", s) } }; return e }]) }();